testcon <- file("./data/repdata-data-StormData.csv.bz2",open="r")
readsizeof <- 20000
nooflines <- 0
( while((linesread <- length(readLines(testcon,readsizeof))) > 0 )
nooflines <- nooflines+linesread )
close(testcon)
nooflines
testcon <- file("./data/repdata-data-StormData.csv.bz2",open="r")
setwd("C:/Users/Sean Smitz/R-Projects/datascience/reproducible-research/project-2")
testcon <- file("./data/repdata-data-StormData.csv.bz2",open="r")
readsizeof <- 20000
nooflines <- 0
( while((linesread <- length(readLines(testcon,readsizeof))) > 0 )
nooflines <- nooflines+linesread )
close(testcon)
nooflines
?read.csv
numrecords = length(read.csv(bzfile('./data/repdata-data-StormData.csv.bz2')))
numrecords
numrecords = length(read.csv(bzfile('./data/repdata-data-StormData.csv.bz2'))[,1])
for (skip in 0:numrecords:20000) {
skip
}
for (skip in 0:20000:numrecords) {
skip
}
for (skip in seq(0,numrecords, by=20000)) {
skip
}
skip
seq(0,numrecords+20000, by=20000)
tmpdata = read.csv(bzfile('./data/repdata-data-StormData.csv.bz2'), skip = 0, nrows = 20000)
newcol = data.frame(do.call(rbind, (str_split(tmpdata[,1], ' ', 2)))[,1], colnames(c('date')))
library('stringr')
newcol = data.frame(do.call(rbind, (str_split(tmpdata[,1], ' ', 2)))[,1], colnames(c('date')))
newcol = str_split(tmpdata[,1], ' ', 2)
newcol = do.call(rbind, newcol)[,1]
newcol = data.frame(newcol, colnames(c('date')))
newcol = str_split(tmpdata[,2], ' ', 2)
newcol = do.call(rbind, newcol)[,1]
newcol = data.frame(newcol, colnames(c('date')))
newcol = null
newcol = nil
newcol = ''
remove(newcol)
remove(linesread)
remove(nooflines)
remove(testcon)
tcol = str_split(tmpdata[,2], ' ', 2)
tcol = do.call(rbind, tcol)[,1]
newcol = data.frame(tcol, colnames(c('date')))
tcol[1]
tcol[1:10]
tcol[1:10,1]
newcol = data.frame(tcol)
View(newcol)
View(newcol)
newcol = data.frame(c(tcol,tmpdata[,3,4]))
newcol = data.frame(c(tcol,tmpdata[,3:4]))
newcol = data.frame(c(tcol,tmpdata[,3:4]), stringsAsFactors = FALSE)
newcol = data.frame(tcol)
?dataframe
?data.frame
newcol = data.frame(tcol, row.names = c('date'))
tcol = str_split(tmpdata[,2], ' ', 2)
tcol = do.call(cbind, tcol)[,1]
tcol = str_split(tmpdata[,2], ' ', 2)
tcol = do.call(cbind, tcol)[1,]
newcol = data.frame(tcol, row.names = c('date'))
newcol = data.frame(tcol)
`rownames<-`(1, 'data')
rownames<-(newcol, 'data')
row.names(newcol) <- c('date')
col.names(newcol) <- c('date')
remove(tcol)
date = str_split(tmpdata[,2], ' ', 2)
date = do.call(cbind, date)[1,]
newcol = data.frame(date)
processeddata = data.frame()
newcol = data.frame(c(date, tmpdata[,3:4]))
newcol = cbind(data.frame(date), tmpdata[,3:4])
?apply
debugSource('C:/Users/Sean Smitz/R-Projects/datascience/reproducible-research/project-2/project2.R')
apply(tmpdata, 1, createendtimestamps)
apply(tmpdata, 1, createendtimestamps)
createendtimestamps <- function(x) {
datetime = paste(str_split(x['END_DATE'], ' ', 2)[[1]][1], x['END_TIME'], sep = ' ')
x['END_TIMESTAMP'] = strptime(datetime, format = "%m/%d/%Y %H%M", tz=x['ZONENAMES'])
}
apply(tmpdata, 1, createendtimestamps)
apply(tmpdata, 1, createendtimestamps)
tz
x
length(x['END_DATE'])
length(tmpdata[1,]$END_DATE)
tmpdata[1,]$END_DATE
length(tmpdata[1,]$END_DATE.trim())
length(tmpdata[1,]$END_DATE > 1)
length(tmpdata[1,]$END_DATE) > 1
length(str_trim(tmpdata[1,]$END_DATE))
length('a')
length('ab')
length(as.character(tmpdata[1,]$END_DATE))
tmpdata[1,]$END_DATE.size()
tmpdata[1,]$END_DATE.size
'ab'.size
debugSource('C:/Users/Sean Smitz/R-Projects/datascience/reproducible-research/project-2/project2.R')
debugSource('C:/Users/Sean Smitz/R-Projects/datascience/reproducible-research/project-2/project2.R')
debugSource('C:/Users/Sean Smitz/R-Projects/datascience/reproducible-research/project-2/project2.R')
tmpdata[which(tmpdata$ZONENAMES == ''),]
debugSource('C:/Users/Sean Smitz/R-Projects/datascience/reproducible-research/project-2/project2.R')
tmpdata[which(tmpdata$ZONENAMES == ''),]
response=getURL('http://api.timezonedb.com/?lat=39.270000&lng=-88.090000&time=145638180&key=VHAD5XMMMDQK')
length(response)
length(response) > 0 && grep('<status>OK</status>', response[1]) == 1
debugSource('C:/Users/Sean Smitz/R-Projects/datascience/reproducible-research/project-2/project2.R')
tmpdata[which(tmpdata$ZONENAMES == ''),]
c
debugSource('C:/Users/Sean Smitz/R-Projects/datascience/reproducible-research/project-2/project2.R')
length(response)
grep('<status>OK</status>', response[1]) == 1
length(response) > 0 && grep('<status>OK</status>', response[1]) == 1
tmpdata[which(tmpdata$ZONENAMES == ''),]
tmpdata[which(tmpdata$ZONENAMES == ''),]
tmpdata[which(tmpdata$ZONENAMES == ''),]
tmpdata[which(tmpdata$ZONENAMES == ''),]
apply(tmpdata, 1, tzconv)
debugSource('C:/Users/Sean Smitz/R-Projects/datascience/reproducible-research/project-2/project2.R')
debugSource('C:/Users/Sean Smitz/R-Projects/datascience/reproducible-research/project-2/project2.R')
debugSource('C:/Users/Sean Smitz/R-Projects/datascience/reproducible-research/project-2/project2.R')
x['LATITUDE']
as.numeric(x['LATITUDE'])
as.numeric(x['LATITUDE'])/100
x['LATITUDE'] == 0
x['LATITUDE'] == "0"
x['LATITUDE'] == 3353
x['LATITUDE'] == "3353"
x['LATITUDE']
x['LATITUDE']
x['LATITUDE']
x['LATITUDE']
x['LATITUDE']
x['LATITUDE']
x['LATITUDE']
x['LATITUDE']
x['LATITUDE']
x['LATITUDE'] == 0
str_trim(x['LATITUDE']) == 0
debugSource('C:/Users/Sean Smitz/R-Projects/datascience/reproducible-research/project-2/project2.R')
debugSource('C:/Users/Sean Smitz/R-Projects/datascience/reproducible-research/project-2/project2.R')
source('C:/Users/Sean Smitz/R-Projects/datascience/reproducible-research/project-2/project2.R')
warnings()
debugSource('C:/Users/Sean Smitz/R-Projects/datascience/reproducible-research/project-2/project2.R')
strptime(datetime, format = "%m/%d/%Y %H%M", tz=str_trim(x['ZONENAMES']))
